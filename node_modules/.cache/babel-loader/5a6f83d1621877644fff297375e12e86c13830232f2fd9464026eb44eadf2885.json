{"ast":null,"code":"import AOS from \"aos\";\nimport \"aos/dist/aos.css\";\nexport default {\n  name: 'HomePage',\n  data() {\n    return {\n      title: \"\",\n      words: [\"Olá.\", \"Hello.\", \"你好.\", \"नमस्ते.\", \"Hola.\", \"Bonjour.\", \"مرحبًا.\", \"Привет.\", \"Guten tag.\", \"こんにちは.\", \"Merhaba.\", \"Xin Chào.\", \"안녕하세요.\", \"Ciao.\", \"สวัสดี.\"],\n      currentWordIndex: 0,\n      offset: 0,\n      forwards: true,\n      skipCount: 0,\n      skipDelay: 15,\n      speed: 150\n    };\n  },\n  mounted() {\n    this.wordFlick();\n    AOS.init({\n      duration: 1000,\n      once: true\n    });\n  },\n  methods: {\n    wordFlick() {\n      let intervalId = null;\n      const typeWord = () => {\n        const currentWord = this.words[this.currentWordIndex];\n\n        // Type forwards until the word is complete\n        if (this.forwards) {\n          if (this.offset < currentWord.length) {\n            this.offset++;\n          } else {\n            this.skipCount++;\n            if (this.skipCount === 3) {\n              this.forwards = false;\n              this.skipCount = 0;\n            }\n          }\n        }\n\n        // Delete letters once the word is complete\n        else {\n          if (this.offset > 0) {\n            this.offset--;\n          } else {\n            // Move to the next word and type it\n            this.currentWordIndex = (this.currentWordIndex + 1) % this.words.length;\n            this.forwards = true;\n          }\n        }\n\n        // Update the title as we type or delete\n        this.title = currentWord.substring(0, this.offset);\n      };\n\n      // Clear any previous interval to prevent stacking of intervals\n      if (intervalId) clearInterval(intervalId);\n\n      // Start a new interval to type and delete the words one by one\n      intervalId = setInterval(typeWord, this.speed);\n\n      // Optionally, stop the interval when a word cycle is done\n      setTimeout(() => {\n        clearInterval(intervalId); // stop the typing\n        // After the cycle is completed, restart it after a short delay\n        setTimeout(() => {\n          this.wordFlick();\n        }, 1000); // Delay before restarting the cycle (can be adjusted)\n      }, this.words[this.currentWordIndex].length * this.speed); // End interval when word finishes typing\n    }\n  },\n  updated() {\n    AOS.refresh();\n  }\n};","map":{"version":3,"names":["AOS","name","data","title","words","currentWordIndex","offset","forwards","skipCount","skipDelay","speed","mounted","wordFlick","init","duration","once","methods","intervalId","typeWord","currentWord","length","substring","clearInterval","setInterval","setTimeout","updated","refresh"],"sources":["/Users/annaphens/Desktop/portfolio/src/components/HomePage.vue"],"sourcesContent":["<template>\n  <div class=\"home\" id=\"homePage\">\n    <div class=\"portfolio-page\">\n      <h2 class=\"title-overlay\">{{ title }}</h2>\n      <div class=\"welcome-message\">WELCOME!</div>\n      <img :src=\"require(`@/assets/images/flower2.jpg`)\" class=\"background\" />\n    </div>\n\n  </div>\n</template>\n\n<script>\nimport AOS from \"aos\";\nimport \"aos/dist/aos.css\";\n\nexport default {\n  name: 'HomePage',\n  data(){\n    return{\n      title: \"\",\n      words: [\"Olá.\", \"Hello.\", \"你好.\", \"नमस्ते.\", \"Hola.\", \"Bonjour.\", \"مرحبًا.\", \"Привет.\", \"Guten tag.\", \"こんにちは.\", \"Merhaba.\", \"Xin Chào.\", \"안녕하세요.\", \"Ciao.\", \"สวัสดี.\"],\n      currentWordIndex: 0,\n      offset: 0,\n      forwards: true,\n      skipCount: 0,\n      skipDelay: 15,\n      speed: 150\n    }\n  },\n\n  mounted() {\n    this.wordFlick();\n    AOS.init({\n      duration: 1000,\n      once: true,\n    });\n  },\n\n  methods: {\n    wordFlick() {\n      let intervalId = null;\n      \n      const typeWord = () => {\n        const currentWord = this.words[this.currentWordIndex];\n        \n        // Type forwards until the word is complete\n        if (this.forwards) {\n          if (this.offset < currentWord.length) {\n            this.offset++;\n          } else {\n            this.skipCount++;\n            if (this.skipCount === 3) {\n              this.forwards = false;\n              this.skipCount = 0;\n            }\n          }\n        }\n        \n        // Delete letters once the word is complete\n        else {\n          if (this.offset > 0) {\n            this.offset--;\n          } else {\n            // Move to the next word and type it\n            this.currentWordIndex = (this.currentWordIndex + 1) % this.words.length;\n            this.forwards = true;\n          }\n        }\n\n        // Update the title as we type or delete\n        this.title = currentWord.substring(0, this.offset);\n      };\n      \n      // Clear any previous interval to prevent stacking of intervals\n      if (intervalId) clearInterval(intervalId);\n\n      // Start a new interval to type and delete the words one by one\n      intervalId = setInterval(typeWord, this.speed);\n\n      // Optionally, stop the interval when a word cycle is done\n      setTimeout(() => {\n        clearInterval(intervalId); // stop the typing\n        // After the cycle is completed, restart it after a short delay\n        setTimeout(() => {\n          this.wordFlick();\n        }, 1000); // Delay before restarting the cycle (can be adjusted)\n      }, this.words[this.currentWordIndex].length * this.speed); // End interval when word finishes typing\n    }\n\n  },\n\n  updated() {\n    AOS.refresh();\n  },\n};\n</script>\n\n<style scoped>\n.home {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center; \n  height: 100vh;\n  background: #e2dfd6;\n  overflow-y: hidden;\n}\n\n.image-container {\n  position: relative;\n  width: 100%;\n  height: 100vh;\n}\n\n.title-overlay {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -100%);\n  font-size: 6em;\n  color: #e2dfd6;\n  font-family: 'EB Garamond';\n  font-weight: 900;\n  text-align: center;\n  z-index: 1;\n  text-shadow: 1px 1px 3px #00000037;\n}\n\n.welcome-message {\n  position: relative;\n  z-index: 1;\n  font-size: 10px;\n  letter-spacing: 2px;\n  transform: translateY(50%);\n  color: #e2dfd6;\n  font-family: monospace;\n  border: 1px solid #e2dfd6;\n  border-color: #e2dfd6;\n  border-radius: 20px;\n  padding: 5px;\n  padding-left: 40px;\n  padding-right: 40px;\n  margin-top: 10px;\n}\n\n.background {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100vh;\n  object-fit: cover;\n}\n</style>\n"],"mappings":"AAYA,OAAOA,GAAE,MAAO,KAAK;AACrB,OAAO,kBAAkB;AAEzB,eAAe;EACbC,IAAI,EAAE,UAAU;EAChBC,IAAIA,CAAA,EAAE;IACJ,OAAM;MACJC,KAAK,EAAE,EAAE;MACTC,KAAK,EAAE,CAAC,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,SAAS,EAAE,OAAO,EAAE,UAAU,EAAE,SAAS,EAAE,SAAS,EAAE,YAAY,EAAE,QAAQ,EAAE,UAAU,EAAE,WAAW,EAAE,QAAQ,EAAE,OAAO,EAAE,SAAS,CAAC;MACrKC,gBAAgB,EAAE,CAAC;MACnBC,MAAM,EAAE,CAAC;MACTC,QAAQ,EAAE,IAAI;MACdC,SAAS,EAAE,CAAC;MACZC,SAAS,EAAE,EAAE;MACbC,KAAK,EAAE;IACT;EACF,CAAC;EAEDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,SAAS,CAAC,CAAC;IAChBZ,GAAG,CAACa,IAAI,CAAC;MACPC,QAAQ,EAAE,IAAI;MACdC,IAAI,EAAE;IACR,CAAC,CAAC;EACJ,CAAC;EAEDC,OAAO,EAAE;IACPJ,SAASA,CAAA,EAAG;MACV,IAAIK,UAAS,GAAI,IAAI;MAErB,MAAMC,QAAO,GAAIA,CAAA,KAAM;QACrB,MAAMC,WAAU,GAAI,IAAI,CAACf,KAAK,CAAC,IAAI,CAACC,gBAAgB,CAAC;;QAErD;QACA,IAAI,IAAI,CAACE,QAAQ,EAAE;UACjB,IAAI,IAAI,CAACD,MAAK,GAAIa,WAAW,CAACC,MAAM,EAAE;YACpC,IAAI,CAACd,MAAM,EAAE;UACf,OAAO;YACL,IAAI,CAACE,SAAS,EAAE;YAChB,IAAI,IAAI,CAACA,SAAQ,KAAM,CAAC,EAAE;cACxB,IAAI,CAACD,QAAO,GAAI,KAAK;cACrB,IAAI,CAACC,SAAQ,GAAI,CAAC;YACpB;UACF;QACF;;QAEA;QAAA,KACK;UACH,IAAI,IAAI,CAACF,MAAK,GAAI,CAAC,EAAE;YACnB,IAAI,CAACA,MAAM,EAAE;UACf,OAAO;YACL;YACA,IAAI,CAACD,gBAAe,GAAI,CAAC,IAAI,CAACA,gBAAe,GAAI,CAAC,IAAI,IAAI,CAACD,KAAK,CAACgB,MAAM;YACvE,IAAI,CAACb,QAAO,GAAI,IAAI;UACtB;QACF;;QAEA;QACA,IAAI,CAACJ,KAAI,GAAIgB,WAAW,CAACE,SAAS,CAAC,CAAC,EAAE,IAAI,CAACf,MAAM,CAAC;MACpD,CAAC;;MAED;MACA,IAAIW,UAAU,EAAEK,aAAa,CAACL,UAAU,CAAC;;MAEzC;MACAA,UAAS,GAAIM,WAAW,CAACL,QAAQ,EAAE,IAAI,CAACR,KAAK,CAAC;;MAE9C;MACAc,UAAU,CAAC,MAAM;QACfF,aAAa,CAACL,UAAU,CAAC,EAAE;QAC3B;QACAO,UAAU,CAAC,MAAM;UACf,IAAI,CAACZ,SAAS,CAAC,CAAC;QAClB,CAAC,EAAE,IAAI,CAAC,EAAE;MACZ,CAAC,EAAE,IAAI,CAACR,KAAK,CAAC,IAAI,CAACC,gBAAgB,CAAC,CAACe,MAAK,GAAI,IAAI,CAACV,KAAK,CAAC,EAAE;IAC7D;EAEF,CAAC;EAEDe,OAAOA,CAAA,EAAG;IACRzB,GAAG,CAAC0B,OAAO,CAAC,CAAC;EACf;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}